{% extends "base.njk" %}
{% set title = "Discovery Piscines" %}

{% block content %}
<div class="userlist-header">
	{# if discovery piscines are defined in the data given to the template, display a selection #}
	{% if discopiscines %}
		<select id="disco-selector">
			{% for disco in discopiscines %}
				{# add selected attribute if the current discovery piscine is the one selected (check url against disco.week_num and disco.year_num) #}
				<option value="{{ disco.year_num | int }}-{{ disco.week_num | int }}-{{ disco.cursus.id | int }}" {{ "selected" if disco.year_num == year and disco.week_num == week and disco.cursus.id == cursus_id }}>{{ disco.year | int }} - week {{ disco.week | e }}: {{ disco.cursus.name | removeDiscoPiscineCursusPrefix | e }} ({{ disco.user_count | int }})</option>
			{% endfor %}
			{% if discopiscines|length == 0 %}
				<option disabled selected>No access to any Discovery Piscines...</option>
			{% endif %}
		</select>
		<script>
			document.getElementById('disco-selector').addEventListener('change', function() {
				window.location.href = '/disco/' + this.value.replaceAll('-', '/');
			});
		</script>
	{% endif %}

	<select id="sort-dropdown">
		<option value="firstname" selected>Sort by first name</option><!-- default sort, already done on server side -->
		<option value="lastname">Sort by last name</option>
		<option value="login">Sort by login</option>
		<option value="lastseen">Sort by last seen</option>
		<option value="totallogtime">Sort by total logtime</option>
		<option value="level">Sort by level</option>
		<option value="student">Sort by active students</option>
	</select>
	<script>
	document.getElementById('sort-dropdown').addEventListener('change', function() {
		const sortValue = this.value;
		const users = document.querySelectorAll('.user.piscine');
		const sortedUsers = Array.from(users).sort((a, b) => {
			// Sort by dropout status first
			const aDropout = a.classList.contains('dropout');
			const bDropout = b.classList.contains('dropout');
			if (aDropout && !bDropout) return 1;
			if (!aDropout && bDropout) return -1;

			// And then by the selected value
			const aVal = a.getAttribute('data-' + sortValue);
			const bVal = b.getAttribute('data-' + sortValue);
			if (sortValue === 'firstname' || sortValue === 'lastname' || sortValue === 'login') {
				return aVal.localeCompare(bVal);
			} else {
				return bVal - aVal;
			}
		});
		const userList = document.querySelector('.userlist.piscine');
		sortedUsers.forEach(user => userList.appendChild(user));
	});
	</script>

	<a class="button" id="csv-download-link" href="/disco/{{ year | int }}/{{ week | int }}/{{ cursus_id | int }}/csv" download="disco-piscine-{{ year | int }}-{{ week | int }}-{{ cursus_id | int }}-export.csv">Export CSV</a>
	<script>
	// Add the current date to the filename of the CSV export
	const csvDownloadLink = document.getElementById('csv-download-link');
	const date = new Date();
	const formattedDate = date.toISOString().slice(0, 10);
	csvDownloadLink.download = `disco-piscine-{{ year | int }}-{{ week | int }}-{{ cursus_id | int }}-export-${formattedDate}.csv`;
	</script>
</div>
<ul class="userlist piscine">
	{% for user in users %}
		<!-- display user information -->
		<li class="user piscine{{ " dropout" if dropouts[user.login] }}" data-firstname="{{ (user.usual_first_name | lower | e) if user.usual_first_name else (user.first_name | lower | e) }}" data-lastname="{{ user.last_name | lower | e }}" data-login="{{ user.login | e }}" data-lastseen="{{ (user.locations[0].begin_at | timestamp) if user.locations.length > 0 else 0 }}" data-totallogtime="{{ logtimes[user.login].total }}" data-level="{{ user.cursus_users[0].level | formatFloat }}" data-student="{{ "1" if activeStudents[user.login] else "0" }}">
			<div class="basic-info">
				<div class="name">{{ user.usual_full_name | e }}</div>
				<div class="login" title="User ID {{ user.id | int }}"><a class="external" target="_blank" href="https://profile.intra.42.fr/users/{{ user.login | e }}/">{{ user.login | e }}</a>{% if activeStudents[user.login] %} <span class="badge" title="User is currently an active student">Student</span>{% endif %}</div>
				<div class="level">{{ user.cursus_users[0].level | formatFloat }}{{ " (dropout)" if dropouts[user.login] }}</div>
				<img class="picture" src="{{ user.image if user.image else "/images/default.png" }}" loading="lazy" />
			</div>

			<div class="cursus-overview piscine">
				{% if user.locations.length > 0 and not user.locations[0].end_at %}
					<div class="currently-in">Available: <a target="clustermap" title="Locate on clustermap" href="/clustermap/live/#{{ user.locations[0].host | e }}">{{ user.locations[0].host | e }}</a></div>
				{% else %}
					<div class="last-seen">Last seen: {{ user.locations[0].end_at | timeAgo }}</div>
				{% endif %}
				<table class="logtime-table">
					<tr>
						<th>Day 1</th>
						<th>Day 2</th>
						<th>Day 3</th>
						<th>Day 4</th>
						<th>Day 5</th>
						<th>Total</th>
					</tr>
					<tr>
						<td>{{ logtimes[user.login].dayOne | formatSeconds }}</td>
						<td>{{ logtimes[user.login].dayTwo | formatSeconds }}</td>
						<td>{{ logtimes[user.login].dayThree | formatSeconds }}</td>
						<td>{{ logtimes[user.login].dayFour | formatSeconds }}</td>
						<td>{{ logtimes[user.login].dayFive | formatSeconds }}</td>
						<td>{{ logtimes[user.login].total | formatSeconds }}</td>
					</tr>
				</table>
				<div class="projects-table">
					{% for project in user.project_users %}
						<a class="project {{ project.status | e }} {{ "validated" if project.validated else ("failed" if project.marked_at) }}" target="_blank" href="https://projects.intra.42.fr/{{ project.project.slug | e }}/{{ user.login | e }}" title="Project User ID {{ project.id | int }}">
							<small class="project-name">{{ project.project.name | removeDiscoPiscinePrefix | e }}</small>
							<span class="project-mark">{{ project | formatProjectStatus }}</span>
						</a>
					{% endfor %}
				</div>
			</div>
		</li>
	{% endfor %}
</ul>
{% endblock %}
